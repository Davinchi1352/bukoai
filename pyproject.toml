[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "buko-ai"
version = "0.1.0"
description = "Generador de libros con inteligencia artificial"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Buko AI Team", email = "soporte@buko-ai.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
]
requires-python = ">=3.12"
dependencies = [
    "flask>=3.0.0",
    "flask-sqlalchemy>=3.0.0",
    "flask-migrate>=4.0.0",
    "flask-login>=0.6.0",
    "flask-wtf>=1.1.0",
    "flask-mail>=0.9.0",
    "flask-cors>=4.0.0",
    "flask-limiter>=3.0.0",
    "flask-socketio>=5.3.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "anthropic>=0.5.0",
    "gunicorn>=21.0.0",
    "python-dotenv>=1.0.0",
    "wtforms>=3.0.0",
    "bcrypt>=4.0.0",
    "requests>=2.31.0",
    "reportlab>=4.0.0",
    "pillow>=10.0.0",
    "python-socketio>=5.8.0",
    "eventlet>=0.33.0",
    "paypal-checkout-serversdk>=1.0.0",
    "mercadopago>=2.2.0",
    "ebooklib>=0.18.0",
    "python-docx>=0.8.0",
    "jinja2>=3.1.0",
    "markupsafe>=2.1.0",
    "itsdangerous>=2.1.0",
    "werkzeug>=3.0.0",
    "click>=8.1.0",
    "blinker>=1.6.0",
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
    "six>=1.16.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "email-validator>=2.0.0",
    "validators>=0.22.0",
    "python-magic>=0.4.27",
    "bleach>=6.0.0",
    "markdown>=3.5.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "cssselect>=1.2.0",
    "pyopenssl>=23.2.0",
    "cryptography>=41.0.0",
    "cffi>=1.15.0",
    "pycparser>=2.21",
    "setuptools>=68.0.0",
    "wheel>=0.41.0",
    "pip>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-flask>=1.2.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.4.0",
    "coverage>=7.3.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "tox>=4.11.0",
    "factory-boy>=3.3.0",
    "faker>=19.6.0",
    "freezegun>=1.2.0",
    "responses>=0.23.0",
    "httpx>=0.24.0",
    "pytest-xdist>=3.3.0",
    "pytest-sugar>=0.9.0",
    "pytest-clarity>=1.0.0",
    "pytest-benchmark>=4.0.0",
    "locust>=2.16.0",
]

[project.urls]
Homepage = "https://buko-ai.com"
Documentation = "https://docs.buko-ai.com"
Repository = "https://github.com/buko-ai/buko-ai"
Issues = "https://github.com/buko-ai/buko-ai/issues"
Changelog = "https://github.com/buko-ai/buko-ai/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = [
    "migrations/",
    "venv/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "reportlab.*",
    "ebooklib.*",
    "docx.*",
    "paypal.*",
    "mercadopago.*",
    "magic.*",
    "bleach.*",
    "markdown.*",
    "bs4.*",
    "lxml.*",
    "cssselect.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "smoke: marks tests as smoke tests",
    "api: marks tests as API tests",
    "ui: marks tests as UI tests",
    "auth: marks tests as authentication tests",
    "payment: marks tests as payment tests",
    "generation: marks tests as book generation tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/migrations/*",
    "*/scripts/*",
    "*/config/*",
    "*/docker/*",
    "*/docs/*",
    "*/build/*",
    "*/dist/*",
    "*/__pycache__/*",
    "*/node_modules/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", "build", "dist", "migrations"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    "migrations",
    "venv",
    ".venv",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
]
per-file-ignores = [
    "__init__.py:F401",
    "*/settings/*.py:F401,F403",
    "*/migrations/*.py:F401",
]

[tool.pydocstyle]
convention = "google"
add_ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107"]
match_dir = "^(?!migrations|tests|venv|build|dist).*"